통신은 언제누가어떤상태를 보낼지 모르는 상태에서 항상 대기하는 상태여야 한다.

원래 파이썬은 네트워크용이었음
빅데이터가 커지기 시작하고 AI, 키워드, 감정 같은 분석쪽이 발달하면서
R과 python이 커짐
파이썬을 많이 쓰다보니 라즈베리파이, 웹, 등 가능함
상속 => 재사용성, 유지보수

실행 중 프로그램이 하나 떠있다 = 하나의 프로세스
ctrl+alt+delete
동일한 프로그램으로 여러개의 프로세스 띄우기 가능



[쓰레드(Thread)]

하나의 프로세스 안에서 독립적인 실행이 여러 개
 작은 실행을 쓰레드라고 부름
e.g. servo_mqtt_pc 프로그램 -> 하나만 싱글쓰레드
    메인쓰레드
자격증 시험 볼때 다음버튼 = 클릭될 때까지 대기
                        시간체크하는 기능
                        네트워크에서 문제 받아오는 기능
    => 별도로 다 실행되도록 해야함

싱글 쓰레드 vs 멀티쓰레드
                    메인 쓰레드 + 어떤 적정한 시점에 새로운 실행문들(독립적)

공유데이터 처리, 스케쥴링


[파이썬에서 쓰레드를 작성하는 방법]

threading 모듈을 이용해서 작업
싱글쓰레드는 모든 코드의 실행이 끝나야 주 쓰레드가 종료된다. 주 쓰레드가 종료되어야 프로세스가 종료된다.
멀티쓰레드는 주 쓰레드가 먼저 종료될 수 있다. 실행 중인 쓰레드가 하나라도 있으면 프로세스는 종료되지 않는다.

1. 멀티쓰레드로 즉, 독립적인 실행흐름을 갖고 실행하고 싶은 코드를 함수로 정의해서 구현한다.
2.  threading.Tread()객체를 생성할 때 target이라는 매개변수에 멀티쓰레드로 실행하고 싶은 함수명(1번)을 지정
   객체변수 = threading.Thread(target="함수명", args=(a, b, ....))  - 매개변수 하나일 경우 (a,)

   threading.Thread클래스의 매개변수
   target : 쓰레드로 실행할 함수명을 명시
   args : target에서 명시한 함수가 매개변수를 필요로 하는 경우 매개변수를 튜플로 만들어서 작업

   => CPU마다 다 다르게 실행

3. 객체의 start메소드를 호출해서 쓰레드를 start시킨다.
   ------------------------------------------- 멀티쓰레드를 실행하기 위해서 start를 호출하면 
                                                    스케쥴러가 적절한 시점에 쓰레드를 만들고 target속성에 지정한 함수를 실행한다.



하나의 프로세스 안에 여러 작업
주쓰레드             에서 파생된 쓰레드들

공유객체를 사용할 경우 : 동기화 이슈
먼저 점유해서 쓰고 있다면 lock을 걸어놈(like 화장실)





--------------------------------
requests 설치하는 방법: 터미널에

pip3 install requests
입력

-------------------------------- 

[미션]
멀티쓰레드 프로그래밍하기
  - threading.Thread클래스를 이용해서 작업하기
  - 두개의 클래스를 만들어서 쓰레드를 생성한다.
  * AlphaThread클래스
      printAlpha메소드를 정의하고 
      A-Z까지 출력
  * DigitThread클래스
      printDigit메소드를 정의하고
      1~30까지 출력

[미션2]
 -   " main쓰레드 " 1초에 한 번씩 출력하는 주 쓰레드
 -  1초에 led의 전구가 on/off를 반복하도록 쓰레드 작성하기
     (쓰레딩모듈, 함수명:blink_led)

[미션]

알파쓰레드 디지트쓰레드 상속클래스로 변경 메일









